apiVersion: v1
kind: ConfigMap
metadata:
  name: database-config
  namespace: sphere
  labels:
    app: database

data:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: sphere

type: Opaque
data:
  POSTGRES_PASSWORD: cGFzc3dvcmQ=

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: sphere
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-sphere-lead
  namespace: sphere
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-lead
  template:
    metadata:
      labels:
        app: postgres-lead
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          envFrom:
            - configMapRef:
                name: database-config
            - secretRef:
                name: db-secret
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-sphere-lead
  namespace: sphere
spec:
  selector:
    app: postgres-lead
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sphere-user-service
  namespace: sphere
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: myregistry.com/sphere-user-service:latest
          env:
            - name: DB_HOST
              value: "postgres-sphere-user"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: sphere-user-service
  namespace: sphere
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: sphere
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: myregistry.com/api-gateway:latest
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: sphere
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
