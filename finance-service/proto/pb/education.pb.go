// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: education.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AbsRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity int32  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AbsRoom) Reset() {
	*x = AbsRoom{}
	mi := &file_education_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsRoom) ProtoMessage() {}

func (x *AbsRoom) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsRoom.ProtoReflect.Descriptor instead.
func (*AbsRoom) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{0}
}

func (x *AbsRoom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AbsRoom) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *AbsRoom) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AbsCourse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LessonDuration int32   `protobuf:"varint,2,opt,name=lessonDuration,proto3" json:"lessonDuration,omitempty"`
	CourseDuration int32   `protobuf:"varint,3,opt,name=courseDuration,proto3" json:"courseDuration,omitempty"`
	Price          float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Description    string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AbsCourse) Reset() {
	*x = AbsCourse{}
	mi := &file_education_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsCourse) ProtoMessage() {}

func (x *AbsCourse) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsCourse.ProtoReflect.Descriptor instead.
func (*AbsCourse) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{1}
}

func (x *AbsCourse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AbsCourse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AbsCourse) GetLessonDuration() int32 {
	if x != nil {
		return x.LessonDuration
	}
	return 0
}

func (x *AbsCourse) GetCourseDuration() int32 {
	if x != nil {
		return x.CourseDuration
	}
	return 0
}

func (x *AbsCourse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AbsCourse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ChangeUserBalanceHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId     string `protobuf:"bytes,1,opt,name=studentId,proto3" json:"studentId,omitempty"`
	Amount        string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	GivenDate     string `protobuf:"bytes,3,opt,name=givenDate,proto3" json:"givenDate,omitempty"`
	Comment       string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	PaymentType   string `protobuf:"bytes,5,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	CreatedBy     string `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedByName string `protobuf:"bytes,7,opt,name=createdByName,proto3" json:"createdByName,omitempty"`
	GroupId       string `protobuf:"bytes,8,opt,name=groupId,proto3" json:"groupId,omitempty"`
}

func (x *ChangeUserBalanceHistoryRequest) Reset() {
	*x = ChangeUserBalanceHistoryRequest{}
	mi := &file_education_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeUserBalanceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserBalanceHistoryRequest) ProtoMessage() {}

func (x *ChangeUserBalanceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserBalanceHistoryRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserBalanceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeUserBalanceHistoryRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetGivenDate() string {
	if x != nil {
		return x.GivenDate
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetCreatedByName() string {
	if x != nil {
		return x.CreatedByName
	}
	return ""
}

func (x *ChangeUserBalanceHistoryRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetStudentsByGroupIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Students []*AbsStudent `protobuf:"bytes,1,rep,name=students,proto3" json:"students,omitempty"`
}

func (x *GetStudentsByGroupIdResponse) Reset() {
	*x = GetStudentsByGroupIdResponse{}
	mi := &file_education_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentsByGroupIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentsByGroupIdResponse) ProtoMessage() {}

func (x *GetStudentsByGroupIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentsByGroupIdResponse.ProtoReflect.Descriptor instead.
func (*GetStudentsByGroupIdResponse) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{3}
}

func (x *GetStudentsByGroupIdResponse) GetStudents() []*AbsStudent {
	if x != nil {
		return x.Students
	}
	return nil
}

type GetStudentsByGroupIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId      string `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	WithOutdated bool   `protobuf:"varint,2,opt,name=withOutdated,proto3" json:"withOutdated,omitempty"`
}

func (x *GetStudentsByGroupIdRequest) Reset() {
	*x = GetStudentsByGroupIdRequest{}
	mi := &file_education_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentsByGroupIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentsByGroupIdRequest) ProtoMessage() {}

func (x *GetStudentsByGroupIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentsByGroupIdRequest.ProtoReflect.Descriptor instead.
func (*GetStudentsByGroupIdRequest) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{4}
}

func (x *GetStudentsByGroupIdRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetStudentsByGroupIdRequest) GetWithOutdated() bool {
	if x != nil {
		return x.WithOutdated
	}
	return false
}

type AbsStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *AbsStudent) Reset() {
	*x = AbsStudent{}
	mi := &file_education_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsStudent) ProtoMessage() {}

func (x *AbsStudent) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsStudent.ProtoReflect.Descriptor instead.
func (*AbsStudent) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{5}
}

func (x *AbsStudent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AbsStudent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AbsStudent) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type GetStudentByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender      bool               `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth string             `protobuf:"bytes,4,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`
	Phone       string             `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Balance     float64            `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt   string             `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Groups      []*GetGroupStudent `protobuf:"bytes,8,rep,name=groups,proto3" json:"groups,omitempty"`
	Condition   string             `protobuf:"bytes,9,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *GetStudentByIdResponse) Reset() {
	*x = GetStudentByIdResponse{}
	mi := &file_education_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentByIdResponse) ProtoMessage() {}

func (x *GetStudentByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentByIdResponse.ProtoReflect.Descriptor instead.
func (*GetStudentByIdResponse) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{6}
}

func (x *GetStudentByIdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetStudentByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetStudentByIdResponse) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *GetStudentByIdResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetStudentByIdResponse) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetStudentByIdResponse) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetStudentByIdResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetStudentByIdResponse) GetGroups() []*GetGroupStudent {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GetStudentByIdResponse) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type NoteStudentByAbsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NoteStudentByAbsRequest) Reset() {
	*x = NoteStudentByAbsRequest{}
	mi := &file_education_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoteStudentByAbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoteStudentByAbsRequest) ProtoMessage() {}

func (x *NoteStudentByAbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoteStudentByAbsRequest.ProtoReflect.Descriptor instead.
func (*NoteStudentByAbsRequest) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{7}
}

func (x *NoteStudentByAbsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGroupStudent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateType           string     `protobuf:"bytes,3,opt,name=dateType,proto3" json:"dateType,omitempty"`
	Days               []string   `protobuf:"bytes,4,rep,name=days,proto3" json:"days,omitempty"`
	Room               *AbsRoom   `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	Course             *AbsCourse `protobuf:"bytes,6,opt,name=course,proto3" json:"course,omitempty"`
	LessonStartTime    string     `protobuf:"bytes,7,opt,name=lessonStartTime,proto3" json:"lessonStartTime,omitempty"`
	GroupStartDate     string     `protobuf:"bytes,8,opt,name=groupStartDate,proto3" json:"groupStartDate,omitempty"`
	GroupEndDate       string     `protobuf:"bytes,9,opt,name=groupEndDate,proto3" json:"groupEndDate,omitempty"`
	StudentCondition   string     `protobuf:"bytes,11,opt,name=studentCondition,proto3" json:"studentCondition,omitempty"`
	StudentActivatedAt string     `protobuf:"bytes,12,opt,name=studentActivatedAt,proto3" json:"studentActivatedAt,omitempty"`
	StudentAddedAt     string     `protobuf:"bytes,14,opt,name=studentAddedAt,proto3" json:"studentAddedAt,omitempty"`
	TeacherName        string     `protobuf:"bytes,15,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
	PriceForStudent    float64    `protobuf:"fixed64,13,opt,name=priceForStudent,proto3" json:"priceForStudent,omitempty"`
}

func (x *GetGroupStudent) Reset() {
	*x = GetGroupStudent{}
	mi := &file_education_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupStudent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupStudent) ProtoMessage() {}

func (x *GetGroupStudent) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupStudent.ProtoReflect.Descriptor instead.
func (*GetGroupStudent) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupStudent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGroupStudent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGroupStudent) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *GetGroupStudent) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *GetGroupStudent) GetRoom() *AbsRoom {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *GetGroupStudent) GetCourse() *AbsCourse {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *GetGroupStudent) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

func (x *GetGroupStudent) GetGroupStartDate() string {
	if x != nil {
		return x.GroupStartDate
	}
	return ""
}

func (x *GetGroupStudent) GetGroupEndDate() string {
	if x != nil {
		return x.GroupEndDate
	}
	return ""
}

func (x *GetGroupStudent) GetStudentCondition() string {
	if x != nil {
		return x.StudentCondition
	}
	return ""
}

func (x *GetGroupStudent) GetStudentActivatedAt() string {
	if x != nil {
		return x.StudentActivatedAt
	}
	return ""
}

func (x *GetGroupStudent) GetStudentAddedAt() string {
	if x != nil {
		return x.StudentAddedAt
	}
	return ""
}

func (x *GetGroupStudent) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *GetGroupStudent) GetPriceForStudent() float64 {
	if x != nil {
		return x.PriceForStudent
	}
	return 0
}

type GetGroupByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGroupByIdRequest) Reset() {
	*x = GetGroupByIdRequest{}
	mi := &file_education_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupByIdRequest) ProtoMessage() {}

func (x *GetGroupByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupByIdRequest.ProtoReflect.Descriptor instead.
func (*GetGroupByIdRequest) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{9}
}

func (x *GetGroupByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetGroupAbsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeacherName     string   `protobuf:"bytes,3,opt,name=teacherName,proto3" json:"teacherName,omitempty"`
	TeacherId       string   `protobuf:"bytes,14,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
	LessonStartTime string   `protobuf:"bytes,4,opt,name=lessonStartTime,proto3" json:"lessonStartTime,omitempty"`
	StudentCount    int32    `protobuf:"varint,6,opt,name=studentCount,proto3" json:"studentCount,omitempty"`
	Name            string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	IsArchived      bool     `protobuf:"varint,8,opt,name=isArchived,proto3" json:"isArchived,omitempty"`
	CreatedAt       string   `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	StartDate       string   `protobuf:"bytes,10,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate         string   `protobuf:"bytes,11,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Days            []string `protobuf:"bytes,12,rep,name=days,proto3" json:"days,omitempty"`
	DateType        string   `protobuf:"bytes,13,opt,name=dateType,proto3" json:"dateType,omitempty"`
}

func (x *GetGroupAbsResponse) Reset() {
	*x = GetGroupAbsResponse{}
	mi := &file_education_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupAbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAbsResponse) ProtoMessage() {}

func (x *GetGroupAbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_education_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAbsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupAbsResponse) Descriptor() ([]byte, []int) {
	return file_education_proto_rawDescGZIP(), []int{10}
}

func (x *GetGroupAbsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetGroupAbsResponse) GetTeacherName() string {
	if x != nil {
		return x.TeacherName
	}
	return ""
}

func (x *GetGroupAbsResponse) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *GetGroupAbsResponse) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

func (x *GetGroupAbsResponse) GetStudentCount() int32 {
	if x != nil {
		return x.StudentCount
	}
	return 0
}

func (x *GetGroupAbsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGroupAbsResponse) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

func (x *GetGroupAbsResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetGroupAbsResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetGroupAbsResponse) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetGroupAbsResponse) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *GetGroupAbsResponse) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

var File_education_proto protoreflect.FileDescriptor

var file_education_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x07, 0x41, 0x62,
	0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x41, 0x62, 0x73, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x90, 0x02, 0x0a, 0x1f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69,
	0x76, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x62, 0x73, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x22, 0x52, 0x0a, 0x0a, 0x41, 0x62, 0x73, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x29, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81, 0x04, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x25,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xed, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0xaf, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x5e, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_education_proto_rawDescOnce sync.Once
	file_education_proto_rawDescData = file_education_proto_rawDesc
)

func file_education_proto_rawDescGZIP() []byte {
	file_education_proto_rawDescOnce.Do(func() {
		file_education_proto_rawDescData = protoimpl.X.CompressGZIP(file_education_proto_rawDescData)
	})
	return file_education_proto_rawDescData
}

var file_education_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_education_proto_goTypes = []any{
	(*AbsRoom)(nil),                         // 0: education.AbsRoom
	(*AbsCourse)(nil),                       // 1: education.AbsCourse
	(*ChangeUserBalanceHistoryRequest)(nil), // 2: education.ChangeUserBalanceHistoryRequest
	(*GetStudentsByGroupIdResponse)(nil),    // 3: education.GetStudentsByGroupIdResponse
	(*GetStudentsByGroupIdRequest)(nil),     // 4: education.GetStudentsByGroupIdRequest
	(*AbsStudent)(nil),                      // 5: education.AbsStudent
	(*GetStudentByIdResponse)(nil),          // 6: education.GetStudentByIdResponse
	(*NoteStudentByAbsRequest)(nil),         // 7: education.NoteStudentByAbsRequest
	(*GetGroupStudent)(nil),                 // 8: education.GetGroupStudent
	(*GetGroupByIdRequest)(nil),             // 9: education.GetGroupByIdRequest
	(*GetGroupAbsResponse)(nil),             // 10: education.GetGroupAbsResponse
	(*AbsResponse)(nil),                     // 11: common.AbsResponse
}
var file_education_proto_depIdxs = []int32{
	5,  // 0: education.GetStudentsByGroupIdResponse.students:type_name -> education.AbsStudent
	8,  // 1: education.GetStudentByIdResponse.groups:type_name -> education.GetGroupStudent
	0,  // 2: education.GetGroupStudent.room:type_name -> education.AbsRoom
	1,  // 3: education.GetGroupStudent.course:type_name -> education.AbsCourse
	7,  // 4: education.StudentService.GetStudentById:input_type -> education.NoteStudentByAbsRequest
	4,  // 5: education.StudentService.GetStudentsByGroupId:input_type -> education.GetStudentsByGroupIdRequest
	2,  // 6: education.StudentService.ChangeUserBalanceHistory:input_type -> education.ChangeUserBalanceHistoryRequest
	9,  // 7: education.GroupService.GetGroupById:input_type -> education.GetGroupByIdRequest
	6,  // 8: education.StudentService.GetStudentById:output_type -> education.GetStudentByIdResponse
	3,  // 9: education.StudentService.GetStudentsByGroupId:output_type -> education.GetStudentsByGroupIdResponse
	11, // 10: education.StudentService.ChangeUserBalanceHistory:output_type -> common.AbsResponse
	10, // 11: education.GroupService.GetGroupById:output_type -> education.GetGroupAbsResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_education_proto_init() }
func file_education_proto_init() {
	if File_education_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_education_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_education_proto_goTypes,
		DependencyIndexes: file_education_proto_depIdxs,
		MessageInfos:      file_education_proto_msgTypes,
	}.Build()
	File_education_proto = out.File
	file_education_proto_rawDesc = nil
	file_education_proto_goTypes = nil
	file_education_proto_depIdxs = nil
}
