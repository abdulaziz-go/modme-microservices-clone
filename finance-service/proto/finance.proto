syntax = "proto3";

package finance;

option go_package = "proto/pb";
import "common.proto";
import "user.proto";
import "google/protobuf/empty.proto";

// discount service start
service DiscountService{
  rpc GetAllInformationDiscount(GetInformationDiscountRequest) returns(GetInformationDiscountResponse);
  rpc CreateDiscount(AbsDiscountRequest) returns(common.AbsResponse);
  rpc DeleteDiscount(AbsDiscountRequest) returns(common.AbsResponse);
}
message AbsDiscountRequest{
  string groupId = 1;
  string studentId = 2;
  string discountPrice = 3;
  string comment = 4;
  string startDate = 5;
  string endDate = 6;
  bool withTeacher = 7;
}
message GetInformationDiscountRequest{
  string groupId = 1;
}
message GetInformationDiscountResponse{
  repeated AbsStudentDiscount discounts = 1;
}
message AbsStudentDiscount{
  string studentId = 1;
  string studentName = 2;
  string studentPhoneNumber = 3;
  string discount = 4;
  string cause = 5;
  string createdAt = 6;
  string startAt = 7;
  string endAt = 8;
  bool withTeacher = 9;
}
// discount service end

// category service start
service CategoryService{
  rpc CreateCategory(CreateCategoryRequest) returns (common.AbsResponse);
  rpc DeleteCategory(common.DeleteAbsRequest) returns (common.AbsResponse);
  rpc GetAllCategory(google.protobuf.Empty) returns(GetAllCategoryRequest);
}
message CreateCategoryRequest{
  string name = 1;
  string desc = 2;
}
message GetAllCategoryRequest{
  repeated AbsCategory categories = 1;
}
message AbsCategory{
  string id = 1;
  string name = 2;
  string desc = 3;
}
// category service end

// expense service start
service ExpenseService{
  rpc CreateExpense(CreateExpenseRequest) returns(common.AbsResponse);
  rpc DeleteExpense(common.DeleteAbsRequest) returns(common.AbsResponse);
  rpc GetAllExpense(GetAllExpenseRequest) returns(GetAllExpenseResponse);
  rpc GetAllExpenseDiagram(GetAllExpenseDiagramRequest) returns(GetAllExpenseDiagramResponse);
}
message GetAllExpenseDiagramResponse{
  repeated string userOrCategories = 1;
  repeated string userOrCategoriesAmount = 2;
  repeated string monthAmount = 3;
  repeated string months = 4;
  string amountCommonExpense = 5;
}
message GetAllExpenseDiagramRequest{
  string from = 1;
  string to = 2;
}
message GetAllExpenseRequest{
  string from = 1;
  string to = 2;
  string type = 3;
  string id = 5;
  common.PageRequest pageReq = 4;
}
message GetAllExpenseResponse{
  int32 totalPageCount = 1;
  repeated GetAllExpenseAbs expenses = 2;
}
message GetAllExpenseAbs{
  string id = 1;
  string givenDate = 2;
  AbsCategory category = 3;
  user.GetUserByIdResponse user = 4;
  string expenseType = 5;
  string sum = 6;
  user.GetUserByIdResponse creator = 7;
  string paymentType = 8;
  string createdAt = 9;
  string title = 10;
}
message CreateExpenseRequest{
  string title = 1;
  string givenDate = 2;
  string expenseType = 3;
  string categoryId = 4;
  string userId = 5;
  string sum = 6;
  string createdById = 7;
  string paymentMethod = 8;
}
// expense service end