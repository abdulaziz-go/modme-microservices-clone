// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: lead.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateLeadRequest) Reset() {
	*x = CreateLeadRequest{}
	mi := &file_lead_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadRequest) ProtoMessage() {}

func (x *CreateLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLeadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetLeadCommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leads        []*Section `protobuf:"bytes,1,rep,name=leads,proto3" json:"leads,omitempty"`
	Expectations []*Section `protobuf:"bytes,2,rep,name=expectations,proto3" json:"expectations,omitempty"`
	Sets         []*Section `protobuf:"bytes,3,rep,name=sets,proto3" json:"sets,omitempty"`
}

func (x *GetLeadCommonResponse) Reset() {
	*x = GetLeadCommonResponse{}
	mi := &file_lead_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeadCommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadCommonResponse) ProtoMessage() {}

func (x *GetLeadCommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadCommonResponse.ProtoReflect.Descriptor instead.
func (*GetLeadCommonResponse) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{1}
}

func (x *GetLeadCommonResponse) GetLeads() []*Section {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *GetLeadCommonResponse) GetExpectations() []*Section {
	if x != nil {
		return x.Expectations
	}
	return nil
}

func (x *GetLeadCommonResponse) GetSets() []*Section {
	if x != nil {
		return x.Sets
	}
	return nil
}

type GetLeadCommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*LeadCommonRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetLeadCommonRequest) Reset() {
	*x = GetLeadCommonRequest{}
	mi := &file_lead_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeadCommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadCommonRequest) ProtoMessage() {}

func (x *GetLeadCommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadCommonRequest.ProtoReflect.Descriptor instead.
func (*GetLeadCommonRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{2}
}

func (x *GetLeadCommonRequest) GetRequests() []*LeadCommonRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type LeadCommonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LeadCommonRequest) Reset() {
	*x = LeadCommonRequest{}
	mi := &file_lead_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadCommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadCommonRequest) ProtoMessage() {}

func (x *LeadCommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadCommonRequest.ProtoReflect.Descriptor instead.
func (*LeadCommonRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{3}
}

func (x *LeadCommonRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LeadCommonRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Name       string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LeadsCount int32   `protobuf:"varint,2,opt,name=leadsCount,proto3" json:"leadsCount,omitempty"`
	Leads      []*Lead `protobuf:"bytes,3,rep,name=leads,proto3" json:"leads,omitempty"`
	Type       string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	mi := &file_lead_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{4}
}

func (x *Section) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Section) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Section) GetLeadsCount() int32 {
	if x != nil {
		return x.LeadsCount
	}
	return 0
}

func (x *Section) GetLeads() []*Lead {
	if x != nil {
		return x.Leads
	}
	return nil
}

func (x *Section) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Lead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment     string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt   string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *Lead) Reset() {
	*x = Lead{}
	mi := &file_lead_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lead) ProtoMessage() {}

func (x *Lead) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lead.ProtoReflect.Descriptor instead.
func (*Lead) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{5}
}

func (x *Lead) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lead) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Lead) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Lead) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type UpdateLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateLeadRequest) Reset() {
	*x = UpdateLeadRequest{}
	mi := &file_lead_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadRequest) ProtoMessage() {}

func (x *UpdateLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateLeadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLeadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteAbsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAbsRequest) Reset() {
	*x = DeleteAbsRequest{}
	mi := &file_lead_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAbsRequest) ProtoMessage() {}

func (x *DeleteAbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAbsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAbsRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAbsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateExpectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateExpectRequest) Reset() {
	*x = CreateExpectRequest{}
	mi := &file_lead_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExpectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExpectRequest) ProtoMessage() {}

func (x *CreateExpectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExpectRequest.ProtoReflect.Descriptor instead.
func (*CreateExpectRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{8}
}

func (x *CreateExpectRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateExpectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateExpectRequest) Reset() {
	*x = UpdateExpectRequest{}
	mi := &file_lead_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExpectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExpectRequest) ProtoMessage() {}

func (x *UpdateExpectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExpectRequest.ProtoReflect.Descriptor instead.
func (*UpdateExpectRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateExpectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateExpectRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CreateSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CourseId        string   `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	TeacherId       string   `protobuf:"bytes,3,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
	DateType        string   `protobuf:"bytes,4,opt,name=dateType,proto3" json:"dateType,omitempty"`
	Date            []string `protobuf:"bytes,5,rep,name=date,proto3" json:"date,omitempty"`
	LessonStartTime string   `protobuf:"bytes,6,opt,name=lessonStartTime,proto3" json:"lessonStartTime,omitempty"`
}

func (x *CreateSetRequest) Reset() {
	*x = CreateSetRequest{}
	mi := &file_lead_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSetRequest) ProtoMessage() {}

func (x *CreateSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSetRequest.ProtoReflect.Descriptor instead.
func (*CreateSetRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSetRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSetRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *CreateSetRequest) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *CreateSetRequest) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *CreateSetRequest) GetDate() []string {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CreateSetRequest) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

type UpdateSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string   `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Title           string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CourseId        string   `protobuf:"bytes,2,opt,name=courseId,proto3" json:"courseId,omitempty"`
	TeacherId       string   `protobuf:"bytes,3,opt,name=teacherId,proto3" json:"teacherId,omitempty"`
	DateType        string   `protobuf:"bytes,4,opt,name=dateType,proto3" json:"dateType,omitempty"`
	Date            []string `protobuf:"bytes,5,rep,name=date,proto3" json:"date,omitempty"`
	LessonStartTime string   `protobuf:"bytes,6,opt,name=lessonStartTime,proto3" json:"lessonStartTime,omitempty"`
}

func (x *UpdateSetRequest) Reset() {
	*x = UpdateSetRequest{}
	mi := &file_lead_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSetRequest) ProtoMessage() {}

func (x *UpdateSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSetRequest.ProtoReflect.Descriptor instead.
func (*UpdateSetRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSetRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSetRequest) GetCourseId() string {
	if x != nil {
		return x.CourseId
	}
	return ""
}

func (x *UpdateSetRequest) GetTeacherId() string {
	if x != nil {
		return x.TeacherId
	}
	return ""
}

func (x *UpdateSetRequest) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *UpdateSetRequest) GetDate() []string {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *UpdateSetRequest) GetLessonStartTime() string {
	if x != nil {
		return x.LessonStartTime
	}
	return ""
}

type CreateLeadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	LeadId      string `protobuf:"bytes,3,opt,name=leadId,proto3" json:"leadId,omitempty"`
	Comment     string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateLeadDataRequest) Reset() {
	*x = CreateLeadDataRequest{}
	mi := &file_lead_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLeadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadDataRequest) ProtoMessage() {}

func (x *CreateLeadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadDataRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadDataRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{12}
}

func (x *CreateLeadDataRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLeadDataRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateLeadDataRequest) GetLeadId() string {
	if x != nil {
		return x.LeadId
	}
	return ""
}

func (x *CreateLeadDataRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type UpdateLeadDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Type        string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	SectionId   string `protobuf:"bytes,6,opt,name=sectionId,proto3" json:"sectionId,omitempty"`
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Comment     string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateLeadDataRequest) Reset() {
	*x = UpdateLeadDataRequest{}
	mi := &file_lead_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLeadDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadDataRequest) ProtoMessage() {}

func (x *UpdateLeadDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadDataRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateLeadDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLeadDataRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateLeadDataRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *UpdateLeadDataRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLeadDataRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateLeadDataRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ChangeLeadPlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeadDataId string             `protobuf:"bytes,1,opt,name=leadDataId,proto3" json:"leadDataId,omitempty"`
	ChangedSet *UpdateLeadRequest `protobuf:"bytes,2,opt,name=changedSet,proto3" json:"changedSet,omitempty"`
}

func (x *ChangeLeadPlaceRequest) Reset() {
	*x = ChangeLeadPlaceRequest{}
	mi := &file_lead_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeLeadPlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLeadPlaceRequest) ProtoMessage() {}

func (x *ChangeLeadPlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lead_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLeadPlaceRequest.ProtoReflect.Descriptor instead.
func (*ChangeLeadPlaceRequest) Descriptor() ([]byte, []int) {
	return file_lead_proto_rawDescGZIP(), []int{14}
}

func (x *ChangeLeadPlaceRequest) GetLeadDataId() string {
	if x != nil {
		return x.LeadDataId
	}
	return ""
}

func (x *ChangeLeadPlaceRequest) GetChangedSet() *UpdateLeadRequest {
	if x != nil {
		return x.ChangedSet
	}
	return nil
}

var File_lead_proto protoreflect.FileDescriptor

var file_lead_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x65,
	0x61, 0x64, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x29, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a,
	0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x65,
	0x61, 0x64, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73,
	0x22, 0x4b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x65, 0x61,
	0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x37, 0x0a,
	0x11, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x70, 0x0a, 0x04,
	0x4c, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x39,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x71, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x53, 0x65, 0x74, 0x32, 0x8a, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x65, 0x61, 0x64,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xcc, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xba, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e,
	0x6c, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x16, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e,
	0x02, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x6c,
	0x65, 0x61, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x62, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x6c,
	0x65, 0x61, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0a, 0x5a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_lead_proto_rawDescOnce sync.Once
	file_lead_proto_rawDescData = file_lead_proto_rawDesc
)

func file_lead_proto_rawDescGZIP() []byte {
	file_lead_proto_rawDescOnce.Do(func() {
		file_lead_proto_rawDescData = protoimpl.X.CompressGZIP(file_lead_proto_rawDescData)
	})
	return file_lead_proto_rawDescData
}

var file_lead_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_lead_proto_goTypes = []any{
	(*CreateLeadRequest)(nil),      // 0: lead.CreateLeadRequest
	(*GetLeadCommonResponse)(nil),  // 1: lead.GetLeadCommonResponse
	(*GetLeadCommonRequest)(nil),   // 2: lead.GetLeadCommonRequest
	(*LeadCommonRequest)(nil),      // 3: lead.LeadCommonRequest
	(*Section)(nil),                // 4: lead.Section
	(*Lead)(nil),                   // 5: lead.Lead
	(*UpdateLeadRequest)(nil),      // 6: lead.UpdateLeadRequest
	(*DeleteAbsRequest)(nil),       // 7: lead.DeleteAbsRequest
	(*CreateExpectRequest)(nil),    // 8: lead.CreateExpectRequest
	(*UpdateExpectRequest)(nil),    // 9: lead.UpdateExpectRequest
	(*CreateSetRequest)(nil),       // 10: lead.CreateSetRequest
	(*UpdateSetRequest)(nil),       // 11: lead.UpdateSetRequest
	(*CreateLeadDataRequest)(nil),  // 12: lead.CreateLeadDataRequest
	(*UpdateLeadDataRequest)(nil),  // 13: lead.UpdateLeadDataRequest
	(*ChangeLeadPlaceRequest)(nil), // 14: lead.ChangeLeadPlaceRequest
	(*AbsResponse)(nil),            // 15: common.AbsResponse
}
var file_lead_proto_depIdxs = []int32{
	4,  // 0: lead.GetLeadCommonResponse.leads:type_name -> lead.Section
	4,  // 1: lead.GetLeadCommonResponse.expectations:type_name -> lead.Section
	4,  // 2: lead.GetLeadCommonResponse.sets:type_name -> lead.Section
	3,  // 3: lead.GetLeadCommonRequest.requests:type_name -> lead.LeadCommonRequest
	5,  // 4: lead.Section.leads:type_name -> lead.Lead
	6,  // 5: lead.ChangeLeadPlaceRequest.changedSet:type_name -> lead.UpdateLeadRequest
	0,  // 6: lead.LeadService.CreateLead:input_type -> lead.CreateLeadRequest
	2,  // 7: lead.LeadService.GetLeadCommon:input_type -> lead.GetLeadCommonRequest
	6,  // 8: lead.LeadService.UpdateLead:input_type -> lead.UpdateLeadRequest
	7,  // 9: lead.LeadService.DeleteLead:input_type -> lead.DeleteAbsRequest
	8,  // 10: lead.ExpectService.CreateExpect:input_type -> lead.CreateExpectRequest
	9,  // 11: lead.ExpectService.UpdateExpect:input_type -> lead.UpdateExpectRequest
	7,  // 12: lead.ExpectService.DeleteExpect:input_type -> lead.DeleteAbsRequest
	10, // 13: lead.SetService.CreateSet:input_type -> lead.CreateSetRequest
	11, // 14: lead.SetService.UpdateSet:input_type -> lead.UpdateSetRequest
	7,  // 15: lead.SetService.DeleteSet:input_type -> lead.DeleteAbsRequest
	12, // 16: lead.LeadDataService.CreateLeadData:input_type -> lead.CreateLeadDataRequest
	13, // 17: lead.LeadDataService.UpdateLeadData:input_type -> lead.UpdateLeadDataRequest
	7,  // 18: lead.LeadDataService.DeleteLeadData:input_type -> lead.DeleteAbsRequest
	14, // 19: lead.LeadDataService.ChangeLeadPlace:input_type -> lead.ChangeLeadPlaceRequest
	15, // 20: lead.LeadService.CreateLead:output_type -> common.AbsResponse
	1,  // 21: lead.LeadService.GetLeadCommon:output_type -> lead.GetLeadCommonResponse
	15, // 22: lead.LeadService.UpdateLead:output_type -> common.AbsResponse
	15, // 23: lead.LeadService.DeleteLead:output_type -> common.AbsResponse
	15, // 24: lead.ExpectService.CreateExpect:output_type -> common.AbsResponse
	15, // 25: lead.ExpectService.UpdateExpect:output_type -> common.AbsResponse
	15, // 26: lead.ExpectService.DeleteExpect:output_type -> common.AbsResponse
	15, // 27: lead.SetService.CreateSet:output_type -> common.AbsResponse
	15, // 28: lead.SetService.UpdateSet:output_type -> common.AbsResponse
	15, // 29: lead.SetService.DeleteSet:output_type -> common.AbsResponse
	15, // 30: lead.LeadDataService.CreateLeadData:output_type -> common.AbsResponse
	15, // 31: lead.LeadDataService.UpdateLeadData:output_type -> common.AbsResponse
	15, // 32: lead.LeadDataService.DeleteLeadData:output_type -> common.AbsResponse
	15, // 33: lead.LeadDataService.ChangeLeadPlace:output_type -> common.AbsResponse
	20, // [20:34] is the sub-list for method output_type
	6,  // [6:20] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_lead_proto_init() }
func file_lead_proto_init() {
	if File_lead_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lead_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_lead_proto_goTypes,
		DependencyIndexes: file_lead_proto_depIdxs,
		MessageInfos:      file_lead_proto_msgTypes,
	}.Build()
	File_lead_proto = out.File
	file_lead_proto_rawDesc = nil
	file_lead_proto_goTypes = nil
	file_lead_proto_depIdxs = nil
}
