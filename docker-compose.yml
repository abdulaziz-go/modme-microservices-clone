services:
  postgres-sphere-lead:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_lead_db
    ports:
      - "9012:5432"
    volumes:
      - postgres_lead_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sphere-network
  postgres-sphere-education:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_education_db
    ports:
      - "9015:5432"
    volumes:
      - postgres_education_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sphere-network
  postgres-sphere-user:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_user_db
    ports:
      - "9019:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sphere-network
  postgres-sphere-finance:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_finance_db
    ports:
      - "9020:5432"
    volumes:
      - postgres_finance_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sphere-network
  sphere-user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "9018:8080"
    environment:
      DB_HOST: postgres-sphere-user
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_user_db
    depends_on:
      postgres-sphere-user:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sphere-network
  sphere-education-service:
    build:
      context: ./education-service
      dockerfile: Dockerfile
    ports:
      - "9016:8080"
    environment:
      DB_HOST: postgres-sphere-education
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_education_db
    depends_on:
      postgres-sphere-education:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sphere-network
  sphere-lead-service:
    build:
      context: ./lead-service
      dockerfile: Dockerfile
    ports:
      - "9017:8080"
    environment:
      DB_HOST: postgres-sphere-lead
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_lead_db
    depends_on:
      postgres-sphere-lead:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sphere-network
  sphere-finance-service:
    build:
      context: ./finance-service
      dockerfile: Dockerfile
    ports:
      - "9021:8080"
    environment:
      DB_HOST: postgres-sphere-finance
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_finance_db
    depends_on:
      postgres-sphere-finance:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sphere-network
  sphere-api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "9013:8080"
    depends_on:
      - sphere-user-service
      - sphere-education-service
      - sphere-lead-service
      - sphere-finance-service
    volumes:
      - api_gateway_uploads:/uploads
    restart: unless-stopped
    networks:
      - sphere-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - sphere-network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus
    networks:
      - sphere-network

volumes:
  postgres_lead_data:
  postgres_education_data:
  postgres_user_data:
  postgres_finance_data:
  api_gateway_uploads:
  grafana-storage:

networks:
  sphere-network:
    driver: bridge
