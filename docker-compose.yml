version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  postgres-sphere-lead:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_lead_db
    ports:
      - "9012:5432"
    volumes:
      - postgres_lead_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
    labels:
      - "service_name=postgres-lead"

  postgres-sphere-education:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_education_db
    ports:
      - "9015:5432"
    volumes:
      - postgres_education_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
    labels:
      - "service_name=postgres-education"

  postgres-sphere-user:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_user_db
    ports:
      - "9019:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
    labels:
      - "service_name=postgres-user"

  postgres-sphere-finance:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sphere_finance_db
    ports:
      - "9020:5432"
    volumes:
      - postgres_finance_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging
    labels:
      - "service_name=postgres-finance"

  sphere-user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres-sphere-user
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_user_db
    depends_on:
      postgres-sphere-user:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "service_name=user-service"

  sphere-education-service:
    build:
      context: ./education-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres-sphere-education
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_education_db
    depends_on:
      postgres-sphere-education:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "service_name=education-service"

  sphere-lead-service:
    build:
      context: ./lead-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres-sphere-lead
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_lead_db
    depends_on:
      postgres-sphere-lead:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "service_name=lead-service"

  sphere-finance-service:
    build:
      context: ./finance-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres-sphere-finance
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: sphere_finance_db
    depends_on:
      postgres-sphere-finance:
        condition: service_healthy
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "service_name=finance-service"

  sphere-api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "9013:8080"
    depends_on:
      - sphere-user-service
      - sphere-education-service
      - sphere-lead-service
      - sphere-finance-service
    volumes:
      - api_gateway_uploads:/uploads
    restart: unless-stopped
    logging: *default-logging
    labels:
      - "service_name=api-gateway"

  loki:
    image: grafana/loki:2.9.2
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_SECURITY_ADMIN_USER=abdulaziz
      - GF_SECURITY_ADMIN_PASSWORD=backendlogs
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_lead_data:
  postgres_education_data:
  postgres_user_data:
  postgres_finance_data:
  api_gateway_uploads:
  loki_data:
  grafana_data:

networks:
  default:
    driver: bridge