definitions:
  pb.AbsCourse:
    properties:
      courseDuration:
        type: integer
      description:
        type: string
      id:
        type: string
      lessonDuration:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  pb.AbsRoom:
    properties:
      capacity:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  pb.ChangeLeadDataRequest:
    properties:
      id:
        type: string
      sectionType:
        type: string
    type: object
  pb.ChangeLeadPlaceRequest:
    properties:
      changedSet:
        $ref: '#/definitions/pb.ChangeLeadDataRequest'
      leadDataId:
        type: string
    type: object
  pb.ChangeToSetRequest:
    properties:
      courseId:
        type: string
      dateType:
        type: string
      days:
        items:
          type: string
        type: array
      end_date:
        type: string
      name:
        type: string
      roomId:
        type: string
      setId:
        type: string
      startDate:
        type: string
      startTime:
        type: string
      teacherId:
        type: string
    type: object
  pb.CreateCourseRequest:
    properties:
      courseDuration:
        type: integer
      description:
        type: string
      lessonDuration:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  pb.CreateGroupRequest:
    properties:
      courseId:
        type: integer
      days:
        items:
          type: string
        type: array
      groupEndDate:
        type: string
      groupStartDate:
        type: string
      lessonStartTime:
        type: string
      name:
        type: string
      roomId:
        type: integer
      teacherId:
        type: string
      type:
        type: string
    type: object
  pb.CreateLeadDataRequest:
    properties:
      comment:
        type: string
      leadId:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  pb.CreateRoomRequest:
    properties:
      capacity:
        type: integer
      name:
        type: string
    type: object
  pb.CreateSetRequest:
    properties:
      courseId:
        type: string
      date:
        items:
          type: string
        type: array
      dateType:
        type: string
      lessonStartTime:
        type: string
      teacherId:
        type: string
      title:
        type: string
    type: object
  pb.DynamicSection:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  pb.GetGroupAbsResponse:
    properties:
      course:
        $ref: '#/definitions/pb.AbsCourse'
      createdAt:
        type: string
      endDate:
        type: string
      id:
        type: string
      isArchived:
        type: boolean
      name:
        type: string
      room:
        $ref: '#/definitions/pb.AbsRoom'
      startDate:
        type: string
      studentCount:
        type: integer
      teacherName:
        type: string
      timeDays:
        type: string
    type: object
  pb.GetGroupsResponse:
    properties:
      groups:
        items:
          $ref: '#/definitions/pb.GetGroupAbsResponse'
        type: array
      totalPageCount:
        type: integer
    type: object
  pb.GetLeadCommonRequest:
    properties:
      requests:
        items:
          $ref: '#/definitions/pb.LeadCommonRequest'
        type: array
    type: object
  pb.GetLeadCommonResponse:
    properties:
      expectations:
        items:
          $ref: '#/definitions/pb.Section'
        type: array
      leads:
        items:
          $ref: '#/definitions/pb.Section'
        type: array
      sets:
        items:
          $ref: '#/definitions/pb.Section'
        type: array
    type: object
  pb.GetLeadListResponse:
    properties:
      sections:
        items:
          $ref: '#/definitions/pb.DynamicSection'
        type: array
    type: object
  pb.GetUpdateCourseAbs:
    properties:
      courses:
        items:
          $ref: '#/definitions/pb.AbsCourse'
        type: array
    type: object
  pb.GetUpdateGroupAbs:
    properties:
      courseId:
        type: integer
      days:
        items:
          type: string
        type: array
      groupEndDate:
        type: string
      groupStartDate:
        type: string
      id:
        type: string
      lessonStartTime:
        type: string
      name:
        type: string
      roomId:
        type: integer
      teacherId:
        type: string
      type:
        type: string
    type: object
  pb.GetUpdateRoomAbs:
    properties:
      rooms:
        items:
          $ref: '#/definitions/pb.AbsRoom'
        type: array
    type: object
  pb.Lead:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  pb.LeadCommonRequest:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  pb.Section:
    properties:
      id:
        type: string
      leads:
        items:
          $ref: '#/definitions/pb.Lead'
        type: array
      leadsCount:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  pb.UpdateLeadDataRequest:
    properties:
      comment:
        type: string
      id:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      sectionId:
        type: string
      type:
        type: string
    type: object
  pb.UpdateSetRequest:
    properties:
      courseId:
        type: string
      date:
        items:
          type: string
        type: array
      dateType:
        type: string
      id:
        type: string
      lessonStartTime:
        type: string
      teacherId:
        type: string
      title:
        type: string
    type: object
  utils.AbsResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Modme Swagger
paths:
  /api/course/create:
    post:
      consumes:
      - application/json
      description: Create a new course based on the provided request data
      parameters:
      - description: Request to create a course
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.CreateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - courses
  /api/course/delete/{id}:
    delete:
      description: Delete a course by its ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - courses
  /api/course/get-all:
    get:
      description: Retrieve all courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetUpdateCourseAbs'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - courses
  /api/course/get-by-id/{id}:
    get:
      description: Retrieves a course by its ID for admin users.
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with course details
          schema:
            $ref: '#/definitions/pb.AbsCourse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Retrieve course by ID (ADMIN)
      tags:
      - courses
  /api/course/update:
    put:
      consumes:
      - application/json
      description: Update the details of an existing course based on the provided
        request data
      parameters:
      - description: Request to update course
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.AbsCourse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - courses
  /api/expectation/create:
    post:
      consumes:
      - application/json
      description: Create a new expectation.
      parameters:
      - description: Title of the expectation
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Expectation created successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - expectations
  /api/expectation/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an expectation by ID.
      parameters:
      - description: Expectation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Expectation deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - expectations
  /api/expectation/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing expectation by ID.
      parameters:
      - description: Expectation ID
        in: path
        name: id
        required: true
        type: string
      - description: Title of the expectation
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Expectation updated successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - expectations
  /api/group/create:
    post:
      consumes:
      - application/json
      description: Create a new group with provided details.
      parameters:
      - description: Group Data
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/pb.CreateGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Group successfully created
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Create a new group
      tags:
      - groups
  /api/group/delete/{id}:
    delete:
      description: Delete a group by its ID.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Group successfully deleted
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Delete a group by ID
      tags:
      - groups
  /api/group/get-all:
    get:
      description: Retrieve a list of all groups.
      produces:
      - application/json
      responses:
        "200":
          description: List of groups
          schema:
            items:
              $ref: '#/definitions/pb.GetGroupsResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Get all groups
      tags:
      - groups
  /api/group/get-by-id/{id}:
    get:
      description: Retrieve details of a group by its ID.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Group details
          schema:
            $ref: '#/definitions/pb.GetGroupAbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Get a group by ID
      tags:
      - groups
  /api/group/update:
    put:
      consumes:
      - application/json
      description: Update details of an existing group.
      parameters:
      - description: Group Data
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/pb.GetUpdateGroupAbs'
      produces:
      - application/json
      responses:
        "200":
          description: Group successfully updated
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Update a group
      tags:
      - groups
  /api/lead/create:
    post:
      consumes:
      - application/json
      description: Create a new lead with the given title.
      parameters:
      - description: Title of the lead
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lead successfully created
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Lead creation conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leads
  /api/lead/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a lead by ID.
      parameters:
      - description: Lead ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lead deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leads
  /api/lead/get-all:
    get:
      consumes:
      - application/json
      description: Update the data associated with a lead
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetLeadListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ALL
      tags:
      - leads
  /api/lead/get-lead-common:
    post:
      consumes:
      - application/json
      description: Get a common lead by ID and type.
      parameters:
      - description: Lead ID
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/pb.GetLeadCommonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Lead details retrieved
          schema:
            $ref: '#/definitions/pb.GetLeadCommonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leads
  /api/lead/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing lead by ID.
      parameters:
      - description: Lead ID
        in: path
        name: id
        required: true
        type: string
      - description: Title of the lead
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lead updated successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leads
  /api/leadData/change-lead-data:
    patch:
      consumes:
      - application/json
      description: Update the data associated with a lead
      parameters:
      - description: Lead change request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.ChangeLeadPlaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: Change lead data
      tags:
      - leadData
  /api/leadData/create:
    post:
      consumes:
      - application/json
      description: Create lead data.
      parameters:
      - description: Lead data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pb.CreateLeadDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Lead data created successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leadData
  /api/leadData/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete lead data by ID.
      parameters:
      - description: Lead data ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lead data deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leadData
  /api/leadData/update:
    put:
      consumes:
      - application/json
      description: Update lead data by ID.
      parameters:
      - description: Lead data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pb.UpdateLeadDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Lead data updated successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - leadData
  /api/room/create:
    post:
      consumes:
      - application/json
      description: Create a new room based on the provided request data
      parameters:
      - description: Request to create a room
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - rooms
  /api/room/delete/{id}:
    delete:
      description: Delete a room by its ID
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - rooms
  /api/room/get-all:
    get:
      description: Retrieve all rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.GetUpdateRoomAbs'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - rooms
  /api/room/update:
    put:
      consumes:
      - application/json
      description: Update the details of an existing room based on the provided request
        data
      parameters:
      - in: query
        name: capacity
        type: integer
      - in: query
        name: id
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - rooms
  /api/set/change-to-group:
    patch:
      consumes:
      - application/json
      description: Change the lead set to a group based on the provided request data
      parameters:
      - description: Request to change set to group
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/pb.ChangeToSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - BearerAuth: []
      summary: ADMIN
      tags:
      - sets
  /api/set/create:
    post:
      consumes:
      - application/json
      description: Create a new set.
      parameters:
      - description: Set data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pb.CreateSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Set created successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - sets
  /api/set/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a set by ID.
      parameters:
      - description: Set ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Set deleted successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - sets
  /api/set/update:
    put:
      consumes:
      - application/json
      description: Update an existing set by ID.
      parameters:
      - description: Set data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/pb.UpdateSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Set updated successfully
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "409":
          description: Conflict occurred
          schema:
            $ref: '#/definitions/utils.AbsResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.AbsResponse'
      security:
      - Bearer: []
      summary: ADMIN
      tags:
      - sets
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
