// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/attendance/get-attendance": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve attendance records for students in a group over a specified date range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "ADMIN , TEACHER",
                "parameters": [
                    {
                        "description": "Group ID and date range",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance records",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/attendance/set": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Record attendance for a student in a group on a specific date.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "TEACHER",
                "parameters": [
                    {
                        "description": "Attendance details",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.SetAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance recorded successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/common-information-company": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get common information about company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "education"
                ],
                "summary": "ADMIN , CEO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company-user/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user associated with a company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company-user"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company-user/delete/{userId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user by their ID and associated company ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company-user"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted user",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company-user/get-user/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve details of a user by their ID and company ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company-user"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company-user/update": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user details by their ID and company ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company-user"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "companyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "description": "Company creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/finance/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new company finance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companyFinance"
                ],
                "summary": "Create a finance record",
                "parameters": [
                    {
                        "description": "Company finance details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CompanyFinance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/finance/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a company finance record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companyFinance"
                ],
                "summary": "Delete a finance record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the company finance record to delete",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/finance/get-all": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of all company finance records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companyFinance"
                ],
                "summary": "Get all finance records",
                "parameters": [
                    {
                        "description": "Pagination details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.PageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of finance records",
                        "schema": {
                            "$ref": "#/definitions/pb.CompanyFinanceList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/finance/get-by-company": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve finance records filtered by company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companyFinance"
                ],
                "summary": "Get finance records by company",
                "parameters": [
                    {
                        "description": "Pagination and filtering details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.PageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of finance records for a specific company",
                        "schema": {
                            "$ref": "#/definitions/pb.CompanyFinanceSelfList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/finance/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update finance details for a specific company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "companyFinance"
                ],
                "summary": "Update finance records by company",
                "parameters": [
                    {
                        "description": "Finance details to be updated",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CompanyFinance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated finance details",
                        "schema": {
                            "$ref": "#/definitions/pb.CompanyFinance"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a paginated list of all companies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter only accept (active , no_active , demo)",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/subdomain/{domain}": {
            "get": {
                "description": "Retrieve the data company by domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "ALL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date of the period",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetCompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/company/tariff/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new tariff with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariff"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "description": "Tariff data",
                        "name": "tariff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.Tariff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/tariff/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a tariff by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariff"
                ],
                "summary": "Delete a tariff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the tariff to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "404": {
                        "description": "Tariff not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/tariff/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of all tariffs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariff"
                ],
                "summary": "SUPER_CEO",
                "responses": {
                    "200": {
                        "description": "List of tariffs",
                        "schema": {
                            "$ref": "#/definitions/pb.TariffList"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/tariff/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the details of an existing tariff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tariff"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "description": "Updated tariff data",
                        "name": "tariff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.Tariff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "updated",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/company/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing company by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "SUPER_CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new course based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to create a course",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a course by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all courses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ALL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateCourseAbs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/get-by-id/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a course by its ID for admin users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with course details",
                        "schema": {
                            "$ref": "#/definitions/pb.AbsCourse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the details of an existing course based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to update course",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.AbsCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new expectation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/category/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new category with the provided name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Category Data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/category/delete/{categoryId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a category by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "categoryId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/category/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "ADMIN , CEO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllCategoryRequest"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/discount/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new discount for a specified group and student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "CEO , ADMIN",
                "parameters": [
                    {
                        "description": "Discount Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.AbsDiscountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/discount/delete": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a discount for a specific group and student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/discount/get-all-by-group/{groupId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves all discount information for a specific group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/pb.GetInformationDiscountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/discount/history/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves the discount history for a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discount"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryDiscountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/expense/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new expense entry with details provided in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Expense details",
                        "name": "expense",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateExpenseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/expense/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes an expense entry by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expense ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/expense/get-all-information/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves expenses with optional filters, pagination, and date range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID to filter by user or creator",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter type (USER or CATEGORY)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllExpenseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameter",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/expense/get-chart-diagram/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Queries the finance service for expense data between 'from' and 'to' dates, returning it as a chart diagram.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expense"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date for the chart (YYYY-MM-DD)",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date for the chart (YYYY-MM-DD)",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart data successfully retrieved",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllExpenseDiagramResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict or error retrieving chart data",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/all-student-payments/chart/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches payment data for students between the given 'from' and 'to' dates to be used in chart visualizations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN ,CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (format: YYYY-MM-DD)",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date (format: YYYY-MM-DD)",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart data of payments",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentPaymentsChartResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error with an explanation",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/all-student-payments/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a list of student payments between the provided 'from' and 'to' date parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (format: YYYY-MM-DD)",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date (format: YYYY-MM-DD)",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentPaymentsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error with an explanation",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/get-all-debts/{page}/{size}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves information about debts within the specified date range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "amountTo",
                        "name": "amountTo",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "amountFrom",
                        "name": "amountFrom",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response containing debt information",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllDebtsInformationResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred while fetching debt information",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/get-all-payments/{studentId}/{month}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all payment records for a student within a specified month.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Month (format: YYYY-MM)",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllPaymentsByMonthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or failed retrieval",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/payment-take-off/chart/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a chart representation of take-off payments within a specified date range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (format: YYYY-MM-DD)",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date (format: YYYY-MM-DD)",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart data of take-off payments",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllPaymentTakeOffChartResponse"
                        }
                    },
                    "409": {
                        "description": "Error message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/payment-take-off/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all take-off payments within a specified date range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (format: YYYY-MM-DD)",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date (format: YYYY-MM-DD)",
                        "name": "to",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of take-off payments",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllPaymentTakeOffResponse"
                        }
                    },
                    "409": {
                        "description": "Error message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/student/add": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a payment for a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Payment Add Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.PaymentAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/student/get-monthly-status/{studentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the monthly payment status for a student.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetMonthlyStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or failed retrieval",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/student/return": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Return a payment for a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Payment Return Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.PaymentReturnRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/payment/student/update": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a payment for a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Payment Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.PaymentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/salary/calculate/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Calculates the salary for a specified teacher within a given date range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "salary"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date for the salary calculation period in YYYY-MM-DD format",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date for the salary calculation period in YYYY-MM-DD format",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Teacher ID for whom the salary is calculated",
                        "name": "teacherId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated salary information",
                        "schema": {
                            "$ref": "#/definitions/pb.CalculateTeacherSalaryResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict or calculation error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/salary/delete/{teacherID}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes a salary entry for a specific teacher by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "salary"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "teacherID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/salary/teacher-add": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Adds a new salary entry for a specific teacher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "salary"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "description": "Salary details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateTeacherSalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salary added successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/finance/salary/teacher-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves the salary information for all teachers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "salary"
                ],
                "summary": "CEO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetTeachersSalaryRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-chart-income": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get information about a income",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "education"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "from",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetCommonInformationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/get-table-groups": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get common information about company",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "education"
                ],
                "summary": "ADMIN , CEO, TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dateType",
                        "name": "dateType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new group with provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Group Data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a group by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-all": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of all groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Group Data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pb.GetGroupsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-course/{courseId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve groups associated with a specific course ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN, TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group details",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupsByCourseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-id/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve details of a group by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group details",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupAbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-teacher/{teacherId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get information about a specific teacher by their ID, with an option to filter archived data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , TEACHER , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "teacherId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include archived information",
                        "name": "isArchived",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupsByTeacherResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/left-after-trial/{from}/{to}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the data left after the trial period based on the provided from date, to date, page, and page size",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "education"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date of the period",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date of the period",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "10",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeftAfterTrialPeriodResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/group/transfer-date": {
            "post": {
                "description": "Transfers the lesson date for a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lesson"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Transfer Lesson Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.TransferLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update details of an existing group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Group Data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateGroupAbs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully updated",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/history/group/{groupId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the history of a specific group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryGroupResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/history/student/{studentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the history of a specific student by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryStudentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/image/get-image": {
            "get": {
                "description": "Retrieve an uploaded image by filename",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg",
                    "image/png",
                    "image/gif"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Get an uploaded image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filename of the image to retrieve",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file"
                    },
                    "400": {
                        "description": "Bad request, filename missing",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "404": {
                        "description": "Image not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/image/upload": {
            "post": {
                "description": "Upload an image file and save it to the server",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Upload an image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with file URL",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or file error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new lead with the given title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead successfully created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Lead creation conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ALL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-lead-common": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a common lead by ID and type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead details retrieved",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-lead-reports": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves lead reports for a given date range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "CEO , ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "till",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead reports response",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error with details",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/change-lead-data": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "Change lead data",
                "parameters": [
                    {
                        "description": "Lead change request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeLeadPlaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create lead data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead data ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new room based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to create a room",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a room by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/get-all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve all rooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateRoomAbs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the details of an existing room based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "capacity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/change-to-group": {
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Change the lead set to a group based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Request to change set to group",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeToSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/get-by-id/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves lead details based on the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with lead details",
                        "schema": {
                            "$ref": "#/definitions/pb.SetDataResponse"
                        }
                    },
                    "404": {
                        "description": "Lead not found",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict error with details",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/add-to-group": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Add student to group details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.AddToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/change-condition": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Changes the condition of a student based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN, CEO",
                "parameters": [
                    {
                        "description": "Change Condition Student Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeConditionStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Student details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created student details",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Flag to determine if money should be returned",
                        "name": "returnMoney",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/get-all/{condition}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "enum": [
                            "ARCHIVED",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "Condition",
                        "name": "condition",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid condition",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/get-student-by-id/{studentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid condition",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new note associated with a specific student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Note details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/delete/{noteId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a specific note associated with a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/get-notes/{studentId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all notes associated with a specific student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetNotesByStudent"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/search-student/{value}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Search for students by phone number or name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search value (phone number or name)",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.SearchStudentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Updated student details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/delete/{userId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user from the system using their ID",
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-all-employee/{isArchived}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieves a list of all employees based on archive status. Restricted to ADMIN and CEO roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by archive status (true=archived, false=active)",
                        "name": "isArchived",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllEmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or processing error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-all-staff/{isArchived}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve a list of all staff members, filtered by their archived status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Boolean to filter archived or active staff; true for archived, false for active",
                        "name": "isArchived",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of staff members based on archived status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pb.GetAllStuffResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid 'isArchived' parameter",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during data retrieval",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-my-profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Retrieve the information of the authenticated user. Admin and CEO roles receive basic user info, while Teachers get additional group information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO , TEACHER",
                "responses": {
                    "200": {
                        "description": "User information with optional groups for Teachers",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error while retrieving teacher's group information",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-teachers/{isDeleted}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches a list of teachers based on the deletion status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN,CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Deletion status (true/false)",
                        "name": "isDeleted",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of teachers",
                        "schema": {
                            "$ref": "#/definitions/pb.GetTeachersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-user/{userId}": {
            "get": {
                "description": "Retrieve user details by their unique user ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CEO , ADMIN , TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/history/{userId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches the history data for a given user ID.",
                "tags": [
                    "user"
                ],
                "summary": "ADMIN, CEO, TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryByUserIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Authenticate a user and return a token upon successful login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ALL",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "LoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid JSON or login failure",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "patch": {
                "description": "Update user details using their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO , TEACHER",
                "parameters": [
                    {
                        "description": "User Details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/update-password/{userId}/{password}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Updates the password of a user specified by the userId.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.AbsCalculateSalary": {
            "type": "object",
            "properties": {
                "commonLessonCountInPeriod": {
                    "type": "integer"
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "salaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.StudentSalary"
                    }
                }
            }
        },
        "pb.AbsCategory": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.AbsCourse": {
            "type": "object",
            "properties": {
                "courseDuration": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonDuration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "pb.AbsDebtsInformation": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.DebtorComment"
                    }
                },
                "debtorId": {
                    "type": "string"
                },
                "debtorName": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.DebtorGroup"
                    }
                },
                "phoneNumber": {
                    "type": "string"
                },
                "totalOnPeriod": {
                    "type": "string"
                }
            }
        },
        "pb.AbsDiscountRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "discountPrice": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "withTeacher": {
                    "type": "boolean"
                }
            }
        },
        "pb.AbsGetAllPaymentsByMonthResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "string"
                },
                "created_by_name": {
                    "type": "string"
                },
                "givenDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                }
            }
        },
        "pb.AbsGetHistoryByUserIdResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "currentValue": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                },
                "updatedField": {
                    "type": "string"
                }
            }
        },
        "pb.AbsGetLeftAfter": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "returnMoney": {
                    "type": "boolean"
                },
                "specificDate": {
                    "type": "string"
                },
                "studentBalance": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "studentPhone": {
                    "type": "string"
                }
            }
        },
        "pb.AbsGetMonthlyStatusResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "month": {
                    "type": "string"
                }
            }
        },
        "pb.AbsGetTeachersSalary": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.AbsGroup": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/pb.AbsCourse"
                },
                "currentGroupStatus": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.AbsHistory": {
            "type": "object",
            "properties": {
                "currentValue": {
                    "type": "string"
                },
                "editedField": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                }
            }
        },
        "pb.AbsHistoryDiscount": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "discountPrice": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "withTeacher": {
                    "type": "boolean"
                }
            }
        },
        "pb.AbsNote": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "pb.AbsPaymentTakeOff": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "givenDate": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "sum": {
                    "type": "string"
                }
            }
        },
        "pb.AbsRoom": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.AbsStudent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.AbsStudentDiscount": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "discount": {
                    "type": "string"
                },
                "endAt": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "studentPhoneNumber": {
                    "type": "string"
                },
                "withTeacher": {
                    "type": "boolean"
                }
            }
        },
        "pb.AbsStudentHistory": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentCondition": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/pb.AbsGroup"
                },
                "oldCondition": {
                    "type": "string"
                },
                "specificDate": {
                    "type": "string"
                },
                "student": {
                    "$ref": "#/definitions/pb.AbsStudent"
                }
            }
        },
        "pb.AbsStudentPayments": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "creatorId": {
                    "type": "string"
                },
                "creatorName": {
                    "type": "string"
                },
                "givenDate": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                }
            }
        },
        "pb.AbsTakeOfChartResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "yearMonth": {
                    "type": "string"
                }
            }
        },
        "pb.AbsTeacher": {
            "type": "object",
            "properties": {
                "activeGroups": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.AddToGroupRequest": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "student_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pb.Attendance": {
            "type": "object",
            "properties": {
                "attend_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCome": {
                    "type": "boolean"
                },
                "studentId": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.CalculateTeacherSalaryResponse": {
            "type": "object",
            "properties": {
                "salaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsCalculateSalary"
                    }
                }
            }
        },
        "pb.ChangeConditionStudentRequest": {
            "type": "object",
            "properties": {
                "actionById": {
                    "type": "string"
                },
                "actionByName": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "returnTheMoney": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "tillDate": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeLeadDataRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sectionType": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeLeadPlaceRequest": {
            "type": "object",
            "properties": {
                "changedSet": {
                    "$ref": "#/definitions/pb.ChangeLeadDataRequest"
                },
                "leadDataId": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeToSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "string"
                },
                "setId": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.CompanyFinance": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "discount_name": {
                    "type": "string"
                },
                "edited_valid_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sum": {
                    "type": "number"
                },
                "tariff_id": {
                    "type": "integer"
                },
                "tariff_sum": {
                    "type": "number"
                }
            }
        },
        "pb.CompanyFinanceForList": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer"
                },
                "company_name": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "discount_name": {
                    "type": "string"
                },
                "finished_to": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_from": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                },
                "tariff_id": {
                    "type": "string"
                },
                "tariff_name": {
                    "type": "string"
                },
                "tariff_sum": {
                    "type": "number"
                }
            }
        },
        "pb.CompanyFinanceList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.CompanyFinanceForList"
                    }
                }
            }
        },
        "pb.CompanyFinanceSelf": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "discount_name": {
                    "type": "string"
                },
                "edit_valid_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sum": {
                    "type": "number"
                },
                "tariff_id": {
                    "type": "integer"
                },
                "tariff_name": {
                    "type": "string"
                },
                "tariff_sum": {
                    "type": "integer"
                }
            }
        },
        "pb.CompanyFinanceSelfList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "discount_name": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.CompanyFinanceSelf"
                    }
                },
                "required_sum": {
                    "type": "number"
                },
                "sum_amount_period": {
                    "type": "number"
                },
                "tariff_name": {
                    "type": "string"
                }
            }
        },
        "pb.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.CreateCompanyRequest": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "companyPhone": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "is_demo": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "tariff_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "valid_date": {
                    "type": "string"
                }
            }
        },
        "pb.CreateCourseRequest": {
            "type": "object",
            "properties": {
                "courseDuration": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "lessonDuration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "pb.CreateExpenseRequest": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "createdById": {
                    "type": "string"
                },
                "expenseType": {
                    "type": "string"
                },
                "givenDate": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "sum": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "pb.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.CreateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "leadId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.CreateNoteRequest": {
            "type": "object",
            "properties": {
                "note": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "pb.CreateRoomRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.CreateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.CreateStudentRequest": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "pb.CreateTeacherSalaryRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.CreateUserRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "pb.Day": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "transferDate": {
                    "type": "string"
                }
            }
        },
        "pb.DebtorComment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentId": {
                    "type": "string"
                }
            }
        },
        "pb.DebtorGroup": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                }
            }
        },
        "pb.DynamicSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.FreezeDetail": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "till_date": {
                    "type": "string"
                }
            }
        },
        "pb.GetAllCategoryRequest": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsCategory"
                    }
                }
            }
        },
        "pb.GetAllDebtsInformationResponse": {
            "type": "object",
            "properties": {
                "debts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsDebtsInformation"
                    }
                },
                "totalPageCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetAllEmployeeResponse": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetUserByIdResponse"
                    }
                }
            }
        },
        "pb.GetAllExpenseAbs": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/pb.AbsCategory"
                },
                "createdAt": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#/definitions/pb.GetUserByIdResponse"
                },
                "expenseType": {
                    "type": "string"
                },
                "givenDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                },
                "sum": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/pb.GetUserByIdResponse"
                }
            }
        },
        "pb.GetAllExpenseDiagramResponse": {
            "type": "object",
            "properties": {
                "amountCommonExpense": {
                    "type": "string"
                },
                "monthAmount": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "months": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userOrCategories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userOrCategoriesAmount": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pb.GetAllExpenseResponse": {
            "type": "object",
            "properties": {
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetAllExpenseAbs"
                    }
                },
                "totalPageCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetAllPaymentTakeOffChartResponse": {
            "type": "object",
            "properties": {
                "chartResponse": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsTakeOfChartResponse"
                    }
                }
            }
        },
        "pb.GetAllPaymentTakeOffResponse": {
            "type": "object",
            "properties": {
                "pennies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsPaymentTakeOff"
                    }
                }
            }
        },
        "pb.GetAllPaymentsByMonthResponse": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsGetAllPaymentsByMonthResponse"
                    }
                }
            }
        },
        "pb.GetAllResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetCompanyResponse"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetAllStudentPaymentsChartResponse": {
            "type": "object",
            "properties": {
                "cash": {
                    "type": "string"
                },
                "click": {
                    "type": "string"
                },
                "payme": {
                    "type": "string"
                },
                "paymentsChart": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsTakeOfChartResponse"
                    }
                },
                "totalRevenue": {
                    "type": "string"
                }
            }
        },
        "pb.GetAllStudentPaymentsResponse": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentPayments"
                    }
                }
            }
        },
        "pb.GetAllStudentResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupsAbsForStudent"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetAllStuffResponse": {
            "type": "object",
            "properties": {
                "stuff": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetUserByIdResponse"
                    }
                }
            }
        },
        "pb.GetAttendanceRequest": {
            "type": "object",
            "properties": {
                "actionId": {
                    "type": "string"
                },
                "actionRole": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "till": {
                    "type": "string"
                },
                "withOutdated": {
                    "type": "boolean"
                }
            }
        },
        "pb.GetAttendanceResponse": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Day"
                    }
                },
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Student"
                    }
                }
            }
        },
        "pb.GetCommonInformationResponse": {
            "type": "object",
            "properties": {
                "debtorsCount": {
                    "type": "integer"
                },
                "payInCurrentMonth": {
                    "type": "integer"
                }
            }
        },
        "pb.GetCompanyResponse": {
            "type": "object",
            "properties": {
                "active_student_count": {
                    "type": "integer"
                },
                "avatarUrl": {
                    "type": "string"
                },
                "ceo_id": {
                    "type": "string"
                },
                "companyPhone": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_demo": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "tariff": {
                    "$ref": "#/definitions/pb.Tariff"
                },
                "title": {
                    "type": "string"
                },
                "valid_date": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupAbsResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/pb.AbsCourse"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "room": {
                    "$ref": "#/definitions/pb.AbsRoom"
                },
                "startDate": {
                    "type": "string"
                },
                "studentCount": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupByCourseAbsResponse": {
            "type": "object",
            "properties": {
                "dateType": {
                    "type": "string"
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupByTeacherAbs": {
            "type": "object",
            "properties": {
                "activeStudentCount": {
                    "type": "integer"
                },
                "courseName": {
                    "type": "string"
                },
                "dayType": {
                    "type": "string"
                },
                "groupEndAt": {
                    "type": "string"
                },
                "groupStartAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomName": {
                    "type": "string"
                },
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudent"
                    }
                }
            }
        },
        "pb.GetGroupsAbsForStudent": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "condition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GroupGetAllStudentAbs"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupsByCourseResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupByCourseAbsResponse"
                    }
                }
            }
        },
        "pb.GetGroupsByTeacherResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupByTeacherAbs"
                    }
                }
            }
        },
        "pb.GetGroupsRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "dateType": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "orderBy": {
                    "type": "string"
                },
                "orderDirection": {
                    "type": "string"
                },
                "page": {
                    "$ref": "#/definitions/pb.PageRequest"
                },
                "startDate": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupAbsResponse"
                    }
                },
                "totalPageCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetHistoryByUserIdResponse": {
            "type": "object",
            "properties": {
                "histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsGetHistoryByUserIdResponse"
                    }
                }
            }
        },
        "pb.GetHistoryDiscountResponse": {
            "type": "object",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsHistoryDiscount"
                    }
                }
            }
        },
        "pb.GetHistoryGroupResponse": {
            "type": "object",
            "properties": {
                "groupHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsHistory"
                    }
                },
                "studentsHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentHistory"
                    }
                }
            }
        },
        "pb.GetHistoryStudentResponse": {
            "type": "object",
            "properties": {
                "conditionsHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentHistory"
                    }
                },
                "studentHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsHistory"
                    }
                }
            }
        },
        "pb.GetInformationDiscountResponse": {
            "type": "object",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentDiscount"
                    }
                }
            }
        },
        "pb.GetLeadCommonRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.LeadCommonRequest"
                    }
                }
            }
        },
        "pb.GetLeadCommonResponse": {
            "type": "object",
            "properties": {
                "expectations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                }
            }
        },
        "pb.GetLeadListResponse": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.DynamicSection"
                    }
                }
            }
        },
        "pb.GetLeftAfterTrialPeriodResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsGetLeftAfter"
                    }
                },
                "totalItemCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetMonthlyStatusResponse": {
            "type": "object",
            "properties": {
                "monthStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsGetMonthlyStatusResponse"
                    }
                }
            }
        },
        "pb.GetNotesByStudent": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsNote"
                    }
                }
            }
        },
        "pb.GetTeachersResponse": {
            "type": "object",
            "properties": {
                "teachers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsTeacher"
                    }
                }
            }
        },
        "pb.GetTeachersSalaryRequest": {
            "type": "object",
            "properties": {
                "salaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsGetTeachersSalary"
                    }
                }
            }
        },
        "pb.GetUpdateCourseAbs": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsCourse"
                    }
                }
            }
        },
        "pb.GetUpdateGroupAbs": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.GetUpdateRoomAbs": {
            "type": "object",
            "properties": {
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsRoom"
                    }
                }
            }
        },
        "pb.GetUserByIdResponse": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "pb.GroupGetAllStudentAbs": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/pb.AbsCourse"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "studentActivatedAt": {
                    "type": "string"
                },
                "studentCondition": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.Lead": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.LeadCommonRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.LoginRequest": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "isOk": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/pb.GetUserByIdResponse"
                }
            }
        },
        "pb.PageRequest": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "string"
                },
                "filter": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "pb.PaymentAddRequest": {
            "type": "object",
            "properties": {
                "actionById": {
                    "type": "string"
                },
                "actionByName": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "sum": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "pb.PaymentReturnRequest": {
            "type": "object",
            "properties": {
                "actionById": {
                    "type": "string"
                },
                "actionByName": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                }
            }
        },
        "pb.PaymentUpdateRequest": {
            "type": "object",
            "properties": {
                "actionById": {
                    "type": "string"
                },
                "actionByName": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "debit": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "pb.SearchStudentResponse": {
            "type": "object",
            "properties": {
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudent"
                    }
                }
            }
        },
        "pb.Section": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Lead"
                    }
                },
                "leadsCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.SetAttendanceRequest": {
            "type": "object",
            "properties": {
                "actionById": {
                    "type": "string"
                },
                "actionByRole": {
                    "type": "string"
                },
                "attendDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "studentId": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.SetDataResponse": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "courseName": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "dates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.Student": {
            "type": "object",
            "properties": {
                "activatedAt": {
                    "type": "string"
                },
                "addedAt": {
                    "type": "string"
                },
                "attendance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Attendance"
                    }
                },
                "balance": {
                    "type": "number"
                },
                "condition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "freezeDetail": {
                    "$ref": "#/definitions/pb.FreezeDetail"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "pb.StudentSalary": {
            "type": "object",
            "properties": {
                "calculatedSalaryInPeriod": {
                    "type": "integer"
                },
                "coursePrice": {
                    "type": "number"
                },
                "passedLessonCount": {
                    "type": "integer"
                },
                "priceType": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "studentName": {
                    "type": "string"
                },
                "totalCount": {
                    "type": "number"
                }
            }
        },
        "pb.Tariff": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discounts": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "student_count": {
                    "type": "integer"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "pb.TariffList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Tariff"
                    }
                }
            }
        },
        "pb.TransferLessonRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "companyPhone": {
                    "type": "string"
                },
                "discount_id": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_demo": {
                    "type": "boolean"
                },
                "startTime": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "tariff_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "valid_date": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "sectionId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateStudentRequest": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "utils.AbsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Sphere Swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
