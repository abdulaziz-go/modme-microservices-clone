// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/expectation/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new expectation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new lead with the given title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead successfully created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Lead creation conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ALL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-lead-common": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a common lead by ID and type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead details retrieved",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/change-lead-data": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "Change lead data",
                "parameters": [
                    {
                        "description": "Lead change request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeLeadPlaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create lead data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead data ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.ChangeLeadDataRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sectionType": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeLeadPlaceRequest": {
            "type": "object",
            "properties": {
                "changedSet": {
                    "$ref": "#/definitions/pb.ChangeLeadDataRequest"
                },
                "leadDataId": {
                    "type": "string"
                }
            }
        },
        "pb.CreateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "leadId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.CreateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.DynamicSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.GetLeadCommonRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.LeadCommonRequest"
                    }
                }
            }
        },
        "pb.GetLeadCommonResponse": {
            "type": "object",
            "properties": {
                "expectations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                }
            }
        },
        "pb.GetLeadListResponse": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.DynamicSection"
                    }
                }
            }
        },
        "pb.Lead": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.LeadCommonRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.Section": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Lead"
                    }
                },
                "leadsCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "sectionId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "utils.AbsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Modme Swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
