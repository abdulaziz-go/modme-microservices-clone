// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/attendance/get-attendance": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve attendance records for students in a group over a specified date range.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "ADMIN , TEACHER",
                "parameters": [
                    {
                        "description": "Group ID and date range",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance records",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAttendanceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/attendance/set": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Record attendance for a student in a group on a specific date.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "TEACHER",
                "parameters": [
                    {
                        "description": "Attendance details",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.SetAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance recorded successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new course based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to create a course",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a course by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/get-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all courses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ALL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateCourseAbs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/get-by-id/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a course by its ID for admin users.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with course details",
                        "schema": {
                            "$ref": "#/definitions/pb.AbsCourse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/course/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing course based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to update course",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.AbsCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new expectation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/expectation/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing expectation by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expectations"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expectation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the expectation",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expectation updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new group with provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Group Data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a group by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-all/{isArchived}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Is Archived",
                        "name": "isArchived",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of groups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pb.GetGroupsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-course/{courseId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve groups associated with a specific course ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN, TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group details",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupsByCourseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-id/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve details of a group by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group details",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupAbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/get-by-teacher/{teacherId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get information about a specific teacher by their ID, with an option to filter archived data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , TEACHER , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "teacherId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include archived information",
                        "name": "isArchived",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetGroupsByTeacherResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/transfer-date": {
            "post": {
                "description": "Transfers the lesson date for a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lesson"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Transfer Lesson Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.TransferLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/group/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of an existing group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Group Data",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateGroupAbs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group successfully updated",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/history/group/{groupId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the history of a specific group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryGroupResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/history/student/{studentId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the history of a specific student by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetHistoryStudentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new lead with the given title.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead successfully created",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Lead creation conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ALL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/get-lead-common": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a common lead by ID and type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead details retrieved",
                        "schema": {
                            "$ref": "#/definitions/pb.GetLeadCommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/lead/update/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing lead by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leads"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the lead",
                        "name": "title",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/change-lead-data": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the data associated with a lead",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "Change lead data",
                "parameters": [
                    {
                        "description": "Lead change request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeLeadPlaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create lead data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lead data ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/leadData/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update lead data by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leadData"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Lead data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateLeadDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lead data updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "description": "Request to create a room",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a room by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/get-all": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all rooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUpdateRoomAbs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/room/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing room based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "capacity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/change-to-group": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the lead set to a group based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Request to change set to group",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeToSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new set.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set created successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/set/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an existing set by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sets"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Set data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateSetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set updated successfully",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict occurred",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/add-to-group": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Add student to group details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.AddToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/change-condition": {
            "put": {
                "description": "Changes the condition of a student based on provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Changes the condition of a student",
                "parameters": [
                    {
                        "description": "Change Condition Student Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangeConditionStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status and message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Student details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created student details",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/get-all/{condition}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "enum": [
                            "ARCHIVED",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "Condition",
                        "name": "condition",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid condition",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/get-student-by-id/{studentId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid condition",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new note associated with a specific student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Note details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/delete/{noteId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specific note associated with a student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note ID",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/note/get-notes/{studentId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all notes associated with a specific student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetNotesByStudent"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/search-student/{value}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search for students by phone number or name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search value (phone number or name)",
                        "name": "value",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.SearchStudentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/student/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "ADMIN",
                "parameters": [
                    {
                        "description": "Updated student details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update success message",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CEO",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/delete/{userId}": {
            "delete": {
                "description": "Delete a user from the system using their ID",
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-all-employee/{isArchived}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of all employees based on archive status. Restricted to ADMIN and CEO roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by archive status (true=archived, false=active)",
                        "name": "isArchived",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetAllEmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or processing error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "408": {
                        "description": "Request timeout",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-teachers/{isDeleted}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetches a list of teachers based on the deletion status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN,CEO",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Deletion status (true/false)",
                        "name": "isDeleted",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of teachers",
                        "schema": {
                            "$ref": "#/definitions/pb.GetTeachersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/get-user/{userId}": {
            "get": {
                "description": "Retrieve user details by their unique user ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CEO , ADMIN , TEACHER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.GetUserByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Authenticate a user and return a token upon successful login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ALL",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "LoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid JSON or login failure",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "patch": {
                "description": "Update user details using their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ADMIN , CEO , TEACHER",
                "parameters": [
                    {
                        "description": "User Details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AbsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pb.AbsCourse": {
            "type": "object",
            "properties": {
                "courseDuration": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonDuration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "pb.AbsGroup": {
            "type": "object",
            "properties": {
                "currentGroupStatus": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.AbsHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "pb.AbsNote": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "pb.AbsRoom": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.AbsStudent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.AbsStudentHistory": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/pb.AbsGroup"
                },
                "specificDate": {
                    "type": "string"
                },
                "student": {
                    "$ref": "#/definitions/pb.AbsStudent"
                }
            }
        },
        "pb.AbsTeacher": {
            "type": "object",
            "properties": {
                "activeGroups": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.AddToGroupRequest": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "student_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "pb.Attendance": {
            "type": "object",
            "properties": {
                "attend_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCome": {
                    "type": "boolean"
                },
                "studentId": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeConditionStudentRequest": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "returnTheMoney": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                },
                "tillDate": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeLeadDataRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sectionType": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeLeadPlaceRequest": {
            "type": "object",
            "properties": {
                "changedSet": {
                    "$ref": "#/definitions/pb.ChangeLeadDataRequest"
                },
                "leadDataId": {
                    "type": "string"
                }
            }
        },
        "pb.ChangeToSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "string"
                },
                "setId": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.CreateCourseRequest": {
            "type": "object",
            "properties": {
                "courseDuration": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "lessonDuration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "pb.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.CreateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "leadId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.CreateNoteRequest": {
            "type": "object",
            "properties": {
                "note": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "pb.CreateRoomRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.CreateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.CreateStudentRequest": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "pb.CreateUserRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "pb.Day": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "transferDate": {
                    "type": "string"
                }
            }
        },
        "pb.DynamicSection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pb.FreezeDetail": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "till_date": {
                    "type": "string"
                }
            }
        },
        "pb.GetAllEmployeeResponse": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetUserByIdResponse"
                    }
                }
            }
        },
        "pb.GetAllStudentResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupsAbsForStudent"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetAttendanceRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "till": {
                    "type": "string"
                },
                "withOutdated": {
                    "type": "boolean"
                }
            }
        },
        "pb.GetAttendanceResponse": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Day"
                    }
                },
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Student"
                    }
                }
            }
        },
        "pb.GetGroupAbsResponse": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/pb.AbsCourse"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateType": {
                    "type": "string"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "room": {
                    "$ref": "#/definitions/pb.AbsRoom"
                },
                "startDate": {
                    "type": "string"
                },
                "studentCount": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupByCourseAbsResponse": {
            "type": "object",
            "properties": {
                "dateType": {
                    "type": "string"
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupByTeacherAbs": {
            "type": "object",
            "properties": {
                "activeStudentCount": {
                    "type": "integer"
                },
                "courseName": {
                    "type": "string"
                },
                "dayType": {
                    "type": "string"
                },
                "groupEndAt": {
                    "type": "string"
                },
                "groupStartAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomName": {
                    "type": "string"
                },
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudent"
                    }
                }
            }
        },
        "pb.GetGroupsAbsForStudent": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "condition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GroupGetAllStudentAbs"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "telegramUsername": {
                    "type": "string"
                }
            }
        },
        "pb.GetGroupsByCourseResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupByCourseAbsResponse"
                    }
                }
            }
        },
        "pb.GetGroupsByTeacherResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupByTeacherAbs"
                    }
                }
            }
        },
        "pb.GetGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.GetGroupAbsResponse"
                    }
                },
                "totalPageCount": {
                    "type": "integer"
                }
            }
        },
        "pb.GetHistoryGroupResponse": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsHistory"
                    }
                },
                "studentHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentHistory"
                    }
                }
            }
        },
        "pb.GetHistoryStudentResponse": {
            "type": "object",
            "properties": {
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsHistory"
                    }
                },
                "studentHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudentHistory"
                    }
                }
            }
        },
        "pb.GetLeadCommonRequest": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.LeadCommonRequest"
                    }
                }
            }
        },
        "pb.GetLeadCommonResponse": {
            "type": "object",
            "properties": {
                "expectations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                },
                "sets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Section"
                    }
                }
            }
        },
        "pb.GetLeadListResponse": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.DynamicSection"
                    }
                }
            }
        },
        "pb.GetNotesByStudent": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsNote"
                    }
                }
            }
        },
        "pb.GetTeachersResponse": {
            "type": "object",
            "properties": {
                "teachers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsTeacher"
                    }
                }
            }
        },
        "pb.GetUpdateCourseAbs": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsCourse"
                    }
                }
            }
        },
        "pb.GetUpdateGroupAbs": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "teacherId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.GetUpdateRoomAbs": {
            "type": "object",
            "properties": {
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsRoom"
                    }
                }
            }
        },
        "pb.GetUserByIdResponse": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "pb.GroupGetAllStudentAbs": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/pb.AbsCourse"
                },
                "days": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupEndDate": {
                    "type": "string"
                },
                "groupStartDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roomId": {
                    "type": "integer"
                },
                "studentActivatedAt": {
                    "type": "string"
                },
                "studentCondition": {
                    "type": "string"
                },
                "teacherName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.Lead": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.LeadCommonRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "isOk": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/pb.GetUserByIdResponse"
                }
            }
        },
        "pb.SearchStudentResponse": {
            "type": "object",
            "properties": {
                "students": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.AbsStudent"
                    }
                }
            }
        },
        "pb.Section": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "leads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Lead"
                    }
                },
                "leadsCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.SetAttendanceRequest": {
            "type": "object",
            "properties": {
                "attendDate": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "studentId": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                }
            }
        },
        "pb.Student": {
            "type": "object",
            "properties": {
                "activatedAt": {
                    "type": "string"
                },
                "addedAt": {
                    "type": "string"
                },
                "attendance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Attendance"
                    }
                },
                "balance": {
                    "type": "number"
                },
                "condition": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "freezeDetail": {
                    "$ref": "#/definitions/pb.FreezeDetail"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "pb.TransferLessonRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateLeadDataRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "sectionId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateSetRequest": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lessonStartTime": {
                    "type": "string"
                },
                "teacherId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateStudentRequest": {
            "type": "object",
            "properties": {
                "additionalContact": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "passportId": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "studentId": {
                    "type": "string"
                }
            }
        },
        "pb.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "utils.AbsResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Sphere Swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
